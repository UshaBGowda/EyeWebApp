//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EyeWebApp.EyeWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/EyeWebService.UtilClasses")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<EyeWebApp.EyeWebService.Address> addressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<EyeWebApp.EyeWebService.Address> addressList {
            get {
                return this.addressListField;
            }
            set {
                if ((object.ReferenceEquals(this.addressListField, value) != true)) {
                    this.addressListField = value;
                    this.RaisePropertyChanged("addressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                if ((object.ReferenceEquals(this.dobField, value) != true)) {
                    this.dobField = value;
                    this.RaisePropertyChanged("dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string loginId {
            get {
                return this.loginIdField;
            }
            set {
                if ((object.ReferenceEquals(this.loginIdField, value) != true)) {
                    this.loginIdField = value;
                    this.RaisePropertyChanged("loginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userTypeId {
            get {
                return this.userTypeIdField;
            }
            set {
                if ((this.userTypeIdField.Equals(value) != true)) {
                    this.userTypeIdField = value;
                    this.RaisePropertyChanged("userTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/EyeWebService.UtilClasses")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string streetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string addressType {
            get {
                return this.addressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.addressTypeField, value) != true)) {
                    this.addressTypeField = value;
                    this.RaisePropertyChanged("addressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneNoField, value) != true)) {
                    this.phoneNoField = value;
                    this.RaisePropertyChanged("phoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stateName {
            get {
                return this.stateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.stateNameField, value) != true)) {
                    this.stateNameField = value;
                    this.RaisePropertyChanged("stateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string streetName {
            get {
                return this.streetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.streetNameField, value) != true)) {
                    this.streetNameField = value;
                    this.RaisePropertyChanged("streetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.zipcodeField, value) != true)) {
                    this.zipcodeField = value;
                    this.RaisePropertyChanged("zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/EyeWebService.UtilClasses")]
    [System.SerializableAttribute()]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int parentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int patientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int providerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dob {
            get {
                return this.dobField;
            }
            set {
                if ((object.ReferenceEquals(this.dobField, value) != true)) {
                    this.dobField = value;
                    this.RaisePropertyChanged("dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parentId {
            get {
                return this.parentIdField;
            }
            set {
                if ((this.parentIdField.Equals(value) != true)) {
                    this.parentIdField = value;
                    this.RaisePropertyChanged("parentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int patientId {
            get {
                return this.patientIdField;
            }
            set {
                if ((this.patientIdField.Equals(value) != true)) {
                    this.patientIdField = value;
                    this.RaisePropertyChanged("patientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int providerId {
            get {
                return this.providerIdField;
            }
            set {
                if ((this.providerIdField.Equals(value) != true)) {
                    this.providerIdField = value;
                    this.RaisePropertyChanged("providerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EyeWebService.EyeWebService")]
    public interface EyeWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/SetProfile", ReplyAction="http://tempuri.org/EyeWebService/SetProfileResponse")]
        bool SetProfile(EyeWebApp.EyeWebService.user newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/SetProfile", ReplyAction="http://tempuri.org/EyeWebService/SetProfileResponse")]
        System.Threading.Tasks.Task<bool> SetProfileAsync(EyeWebApp.EyeWebService.user newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserId", ReplyAction="http://tempuri.org/EyeWebService/GetUserIdResponse")]
        int GetUserId(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserId", ReplyAction="http://tempuri.org/EyeWebService/GetUserIdResponse")]
        System.Threading.Tasks.Task<int> GetUserIdAsync(string loginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserTypeId", ReplyAction="http://tempuri.org/EyeWebService/GetUserTypeIdResponse")]
        int GetUserTypeId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserTypeId", ReplyAction="http://tempuri.org/EyeWebService/GetUserTypeIdResponse")]
        System.Threading.Tasks.Task<int> GetUserTypeIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListChildrenProfile", ReplyAction="http://tempuri.org/EyeWebService/ListChildrenProfileResponse")]
        System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient> ListChildrenProfile(int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListChildrenProfile", ReplyAction="http://tempuri.org/EyeWebService/ListChildrenProfileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient>> ListChildrenProfileAsync(int parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetPatientProfile", ReplyAction="http://tempuri.org/EyeWebService/GetPatientProfileResponse")]
        EyeWebApp.EyeWebService.Patient GetPatientProfile(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetPatientProfile", ReplyAction="http://tempuri.org/EyeWebService/GetPatientProfileResponse")]
        System.Threading.Tasks.Task<EyeWebApp.EyeWebService.Patient> GetPatientProfileAsync(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListProviderProfiles", ReplyAction="http://tempuri.org/EyeWebService/ListProviderProfilesResponse")]
        System.Collections.Generic.List<EyeWebApp.EyeWebService.user> ListProviderProfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListProviderProfiles", ReplyAction="http://tempuri.org/EyeWebService/ListProviderProfilesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.user>> ListProviderProfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/SetChildProfile", ReplyAction="http://tempuri.org/EyeWebService/SetChildProfileResponse")]
        EyeWebApp.EyeWebService.Patient SetChildProfile(EyeWebApp.EyeWebService.Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/SetChildProfile", ReplyAction="http://tempuri.org/EyeWebService/SetChildProfileResponse")]
        System.Threading.Tasks.Task<EyeWebApp.EyeWebService.Patient> SetChildProfileAsync(EyeWebApp.EyeWebService.Patient newPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListPatientsProfile", ReplyAction="http://tempuri.org/EyeWebService/ListPatientsProfileResponse")]
        System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient> ListPatientsProfile(int providerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/ListPatientsProfile", ReplyAction="http://tempuri.org/EyeWebService/ListPatientsProfileResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient>> ListPatientsProfileAsync(int providerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserProfile", ReplyAction="http://tempuri.org/EyeWebService/GetUserProfileResponse")]
        EyeWebApp.EyeWebService.user GetUserProfile(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EyeWebService/GetUserProfile", ReplyAction="http://tempuri.org/EyeWebService/GetUserProfileResponse")]
        System.Threading.Tasks.Task<EyeWebApp.EyeWebService.user> GetUserProfileAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EyeWebServiceChannel : EyeWebApp.EyeWebService.EyeWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EyeWebServiceClient : System.ServiceModel.ClientBase<EyeWebApp.EyeWebService.EyeWebService>, EyeWebApp.EyeWebService.EyeWebService {
        
        public EyeWebServiceClient() {
        }
        
        public EyeWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EyeWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EyeWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EyeWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SetProfile(EyeWebApp.EyeWebService.user newUser) {
            return base.Channel.SetProfile(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> SetProfileAsync(EyeWebApp.EyeWebService.user newUser) {
            return base.Channel.SetProfileAsync(newUser);
        }
        
        public int GetUserId(string loginId) {
            return base.Channel.GetUserId(loginId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIdAsync(string loginId) {
            return base.Channel.GetUserIdAsync(loginId);
        }
        
        public int GetUserTypeId(int userId) {
            return base.Channel.GetUserTypeId(userId);
        }
        
        public System.Threading.Tasks.Task<int> GetUserTypeIdAsync(int userId) {
            return base.Channel.GetUserTypeIdAsync(userId);
        }
        
        public System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient> ListChildrenProfile(int parentId) {
            return base.Channel.ListChildrenProfile(parentId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient>> ListChildrenProfileAsync(int parentId) {
            return base.Channel.ListChildrenProfileAsync(parentId);
        }
        
        public EyeWebApp.EyeWebService.Patient GetPatientProfile(int patientId) {
            return base.Channel.GetPatientProfile(patientId);
        }
        
        public System.Threading.Tasks.Task<EyeWebApp.EyeWebService.Patient> GetPatientProfileAsync(int patientId) {
            return base.Channel.GetPatientProfileAsync(patientId);
        }
        
        public System.Collections.Generic.List<EyeWebApp.EyeWebService.user> ListProviderProfiles() {
            return base.Channel.ListProviderProfiles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.user>> ListProviderProfilesAsync() {
            return base.Channel.ListProviderProfilesAsync();
        }
        
        public EyeWebApp.EyeWebService.Patient SetChildProfile(EyeWebApp.EyeWebService.Patient newPatient) {
            return base.Channel.SetChildProfile(newPatient);
        }
        
        public System.Threading.Tasks.Task<EyeWebApp.EyeWebService.Patient> SetChildProfileAsync(EyeWebApp.EyeWebService.Patient newPatient) {
            return base.Channel.SetChildProfileAsync(newPatient);
        }
        
        public System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient> ListPatientsProfile(int providerId) {
            return base.Channel.ListPatientsProfile(providerId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EyeWebApp.EyeWebService.Patient>> ListPatientsProfileAsync(int providerId) {
            return base.Channel.ListPatientsProfileAsync(providerId);
        }
        
        public EyeWebApp.EyeWebService.user GetUserProfile(int userId) {
            return base.Channel.GetUserProfile(userId);
        }
        
        public System.Threading.Tasks.Task<EyeWebApp.EyeWebService.user> GetUserProfileAsync(int userId) {
            return base.Channel.GetUserProfileAsync(userId);
        }
    }
}
